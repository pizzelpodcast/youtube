#!/usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require "rss"
require "open-uri"
require "nokogiri"
require "rack"
require "googl"

def shorten_url(url)
  case url
    # Remove www. from URLs that can handle it
    when /^https?:\/\/www\.(?:imdb|bbc)\./
      url.gsub(/\/\/www\./, "//")

    # Use shorthand YouTube URLs
    when /^https?:\/\/(?:www\.)?youtube\.com\/watch\?/
      query = Rack::Utils.parse_query(URI.parse(url).query)
      "https://youtu.be/#{query["v"]}"

    # Keep Wikipedia URLs intact
    when /https?:\/\/(?:..\.)?wikipedia\.org/
      url

    # Use goo.gl for long URLs
    else
      url.length > 42 ? Googl.shorten(url) : url rescue url
  end
end

PIZZEL_RSS = "https://www.pizzelpodcast.com/?format=rss"

feed = open(PIZZEL_RSS) { |rss| RSS::Parser.parse(rss) }

ep_step = (ARGV[0].to_i || 0)

ep = feed.items[ep_step]

puts ep.title, "\n"

doc = Nokogiri::HTML(ep.description)

# Find the heading "Notas del episodio"
divider = doc.at("p:has(strong:contains('Notas del episodio'))")


# Description
puts divider.xpath("preceding-sibling::p").map(&:text).join("\n\n")

# Notes
puts "\nNotas del episodio:\n\n"
divider.xpath("following-sibling::*/a").each do |link|
  puts "▷ #{link.text}\n#{shorten_url(link[:href])}\n\n"
end

puts "- - -\n"

puts "\nEscuchá este episodio en nuestro sitio"
puts ep.link

puts <<-EOS

Suscribite al podcast en iTunes
https://itunes.apple.com/ar/podcast/pizzel-podcast/id1092904384

Suscribite al podcast en iVoox
https://www.ivoox.com/podcast-pizzel_sq_f1280950_1.html

Javier en YouTube
https://www.youtube.com/user/jzmusica
EOS
